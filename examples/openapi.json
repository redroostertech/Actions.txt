{
    "openapi": "3.0.3",
    "info": {
        "title": "ActionTxt Demo API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://demo.actiontxt.org"
        }
    ],
    "paths": {
        "/ping": {
            "get": {
                "operationId": "Ping_Get",
                "summary": "Ping",
                "security": [
                    {
                        "oauth2": [
                            "demo:read"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "message"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "pong"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                }
            }
        },
        "/orders/{order_id}/status": {
            "get": {
                "operationId": "Orders_GetStatus",
                "summary": "Get order status",
                "security": [
                    {
                        "oauth2": [
                            "demo:order:read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[A-Z0-9_-]{6,32}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderStatus"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                }
            }
        },
        "/demos": {
            "post": {
                "operationId": "Demos_Create",
                "summary": "Create demo request",
                "description": "Non-idempotent creation; requires Idempotency-Key header.",
                "security": [
                    {
                        "oauth2": [
                            "demo:schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "Idempotency-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 8
                        },
                        "description": "Provide a unique key to safely retry without duplicates."
                    },
                    {
                        "name": "X-Agent-Run-Id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optional correlation ID for agent workflows."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduleDemoInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "description": "URL to the created resource"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduleDemoOutput"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Pending human review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "status",
                                        "review_url",
                                        "ticket_id"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending"
                                            ]
                                        },
                                        "review_url": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "ticket_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                }
            }
        },
        "/quotes:sandbox": {
            "post": {
                "operationId": "Quotes_CreateSandbox",
                "summary": "Create quote in sandbox",
                "security": [
                    {
                        "oauth2": [
                            "demo:quote:sandbox"
                        ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuoteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sandbox quote",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Quote"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://id.demo.actiontxt.org/oauth2/token",
                        "scopes": {
                            "demo:read": "Read-only demo access",
                            "demo:schedule": "Schedule a product demo",
                            "demo:order:read": "Read order status",
                            "demo:quote:sandbox": "Create sandbox quotes"
                        }
                    }
                }
            }
        },
        "schemas": {
            "OrderStatus": {
                "type": "object",
                "required": [
                    "order_id",
                    "status",
                    "updated_at"
                ],
                "properties": {
                    "order_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "canceled"
                        ]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "ScheduleDemoInput": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "time_window"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "time_window": {
                        "type": "string",
                        "description": "ISO8601 interval"
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 2000
                    }
                },
                "additionalProperties": false
            },
            "ScheduleDemoOutput": {
                "type": "object",
                "required": [
                    "ticket_id",
                    "calendar_link"
                ],
                "properties": {
                    "ticket_id": {
                        "type": "string"
                    },
                    "calendar_link": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "additionalProperties": false
            },
            "QuoteRequest": {
                "type": "object",
                "required": [
                    "sku",
                    "quantity"
                ],
                "properties": {
                    "sku": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000
                    }
                },
                "additionalProperties": false
            },
            "Quote": {
                "type": "object",
                "required": [
                    "quote_id",
                    "subtotal",
                    "currency",
                    "items"
                ],
                "properties": {
                    "quote_id": {
                        "type": "string"
                    },
                    "subtotal": {
                        "type": "number",
                        "minimum": 0
                    },
                    "currency": {
                        "type": "string",
                        "pattern": "^[A-Z]{3}$"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "sku",
                                "quantity",
                                "unit_price"
                            ],
                            "properties": {
                                "sku": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "unit_price": {
                                    "type": "number",
                                    "minimum": 0
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "additionalProperties": false
            },
            "Error": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "additionalProperties": false
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Conflict": {
                "description": "Conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "RateLimited": {
                "description": "Rate limited",
                "headers": {
                    "Retry-After": {
                        "schema": {
                            "type": "string"
                        },
                        "description": "When to retry (seconds or HTTP date)"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    }
}